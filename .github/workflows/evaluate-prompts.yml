name: Evaluate Prompt Changes

on:
  workflow_call:
    inputs:
      pr-number:
        required: true
        type: string
      repository:
        required: true
        type: string
      auto-close-on-fail:
        required: false
        type: boolean
        default: true
        description: 'Automatically close PR if evaluation fails'
      repo-path:
        required: false
        type: string
        description: 'Path to repository for context loading'
      custom-expert:
        required: false
        type: string
        description: 'Custom expert specification (alias or repo:path)'
    secrets:
      github-token:
        required: true
      anthropic-api-key:
        required: true

jobs:
  evaluate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout Expert
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ github.head_ref || github.ref }}
          sparse-checkout: |
            scripts
            templates
            expert-definitions
            prompts
            package.json
          sparse-checkout-cone-mode: false
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Create package.json if needed
        run: |
          if [ ! -f package.json ]; then
            npm init -y
          fi
          
      - name: Install dependencies
        run: |
          npm install @anthropic-ai/sdk@0.24.0 @octokit/rest@19.0.0 @actions/core@1.10.0 @actions/github@5.1.1
        
      - name: Cache Cleanup
        if: inputs.repo-path != ''
        run: |
          echo "Cleaning up stale cached files..."
          
          # Run cache cleanup for the repository
          if [ -d "${{ inputs.repo-path }}" ]; then
            # Clean up files older than 14 days
            node scripts/claude-cache-manager.js cleanup "${{ inputs.repo-path }}" > cleanup_report.json
            
            # Display cleanup summary
            echo "Cache cleanup completed:"
            cat cleanup_report.json | jq '.summary'
            
            # Clean old sessions
            node scripts/claude-cache-manager.js clean-sessions "${{ inputs.repo-path }}" 30
          fi
          
      - name: Load Repository Context
        if: inputs.repo-path != ''
        run: |
          echo "Loading repository context from: ${{ inputs.repo-path }}"
          
          # Check if path exists
          if [ -d "${{ inputs.repo-path }}" ]; then
            # Load context using v2 script with image/PDF support
            node scripts/repo-context-v2.js "${{ inputs.repo-path }}" --include-images > repo_context.json
            echo "Repository context loaded successfully"
            
            # Track files being sent to Claude
            echo "Tracking files in Claude cache..."
            cat repo_context.json | node scripts/claude-cache-manager.js track "${{ inputs.repo-path }}" > track_result.json
            
            # Show tracking result
            echo "Session ID: $(cat track_result.json | jq '.sessionId')"
            
            # Show summary
            echo "Context summary:"
            cat repo_context.json | jq '.summary'
            
            # Show cache stats
            echo "Cache statistics:"
            node scripts/claude-cache-manager.js stats "${{ inputs.repo-path }}" | jq '{activeFiles, cleanedFiles, cacheSavings}'
          else
            echo "Repository path not found: ${{ inputs.repo-path }}"
          fi
        
      - name: Run evaluation
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
          ANTHROPIC_API_KEY: ${{ secrets.anthropic-api-key }}
        run: |
          # Parse repository input
          IFS='/' read -r OWNER REPO <<< "${{ inputs.repository }}"
          
          # Choose evaluation script based on context availability
          if [ -f "repo_context.json" ]; then
            echo "Using context-enhanced evaluation"
            cp scripts/evaluate-with-context.js evaluate.js
          else
            echo "Using standard evaluation"
            cp scripts/evaluate-prompts.js evaluate.js
          fi
          
          # Run evaluation with optional custom expert
          OWNER="${OWNER}" REPO="${REPO}" PR_NUMBER="${{ inputs.pr-number }}" GITHUB_BASE_REF="${{ github.base_ref }}" AUTO_CLOSE_ON_FAIL="${{ inputs.auto-close-on-fail }}" REPO_CONTEXT_FILE="repo_context.json" CUSTOM_EXPERT="${{ inputs.custom-expert }}" node evaluate.js