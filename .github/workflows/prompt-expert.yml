name: Prompt Expert

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  prompt-expert-respond:
    # Only run if comment contains @prompt-expert
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.comment.body, '@prompt-expert')
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          sparse-checkout: |
            .github/workflows
            src/scripts
            src/lib
            experts/
            templates/
            package.json
            README.md
          sparse-checkout-cone-mode: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install @anthropic-ai/sdk @octokit/rest

      - name: Get PR/Issue context
        id: context
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
            echo "COMMENT_ID=0" >> $GITHUB_ENV
            echo "IS_PR=true" >> $GITHUB_ENV
            # Save body to file to handle multiline content
            cat << 'EOF' > /tmp/comment_body.txt
          ${{ github.event.pull_request.body }}
          EOF
          elif [[ "${{ github.event.issue.pull_request }}" != "" ]]; then
            echo "PR_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
            echo "COMMENT_ID=${{ github.event.comment.id }}" >> $GITHUB_ENV
            echo "IS_PR=true" >> $GITHUB_ENV
            # Save body to file to handle multiline content
            cat << 'EOF' > /tmp/comment_body.txt
          ${{ github.event.comment.body }}
          EOF
          else
            echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
            echo "COMMENT_ID=${{ github.event.comment.id }}" >> $GITHUB_ENV
            echo "IS_PR=false" >> $GITHUB_ENV
            # Save body to file to handle multiline content
            cat << 'EOF' > /tmp/comment_body.txt
          ${{ github.event.comment.body }}
          EOF
          fi
          
          # Read comment body from file
          COMMENT_BODY=$(cat /tmp/comment_body.txt)
          echo "COMMENT_BODY<<EOF" >> $GITHUB_ENV
          echo "$COMMENT_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: React to comment
        if: github.event_name != 'pull_request'
        run: |
          if [[ "$IS_PR" == "true" ]]; then
            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository }}/issues/comments/${{ env.COMMENT_ID }}/reactions \
              -f content='eyes'
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Prompt Expert Session
        id: claude
        uses: ./
        with:
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-body: ${{ env.COMMENT_BODY }}
          repository: ${{ github.repository }}
          pr-number: ${{ env.PR_NUMBER }}
          issue-number: ${{ env.ISSUE_NUMBER }}

      - name: Handle errors
        if: failure()
        run: |
          # Build workflow URL with hyperlink
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          ERROR_MSG="## ‚ùå Prompt Expert Processing Failed

          The request could not be processed due to a system error.
          
          ### üîç Debug Information
          
          [**Click here to view the full workflow logs ‚Üí**]($WORKFLOW_URL)
          
          **To investigate:**
          1. Click the link above to open the workflow run
          2. Check the 'Run Prompt Expert Session' step for detailed logs
          3. Look for error messages and stack traces
          4. Review any API or tool execution failures
          
          If this issue persists, please report it to the repository maintainers.
          
          ---
          <sub>Run ID: ${{ github.run_id }} | Workflow: ${{ github.workflow }}</sub>"
          
          TARGET_NUMBER=""
          if [[ "$IS_PR" == "true" ]]; then
            TARGET_NUMBER="$PR_NUMBER"
            gh pr comment $PR_NUMBER --body "$ERROR_MSG"
          else
            TARGET_NUMBER="$ISSUE_NUMBER" 
            gh issue comment $ISSUE_NUMBER --body "$ERROR_MSG"
          fi
          
          # Add failure label
          if [[ -n "$TARGET_NUMBER" ]]; then
            gh issue edit $TARGET_NUMBER --add-label "prompt-expert-failed" || echo "Could not add failure label"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}